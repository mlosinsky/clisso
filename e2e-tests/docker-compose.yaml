services:
  sso-proxy:
    container_name: sso-proxy
    image: sso-proxy
    build:
      context: ../examples/proxy
    ports:
      - '8000:8000'
    environment:
      HTTP_PORT: 8000
      OIDC_BASE_URI: http://keycloak:8080/realms/test/protocol/openid-connect
      OIDC_REDIRECT_URI: http://localhost:8000/cli-logged-in
      OIDC_AUTHORIZATION_URI: http://localhost:8080/realms/test/protocol/openid-connect/auth?response_type=code&scope=openid&client_id=test&redirect_uri=http://localhost:8000/cli-logged-in
      OIDC_CLIENT_ID: test
      OIDC_CLIENT_SECRET: YscDX1J39s7PDBbpBJWsGyOLdl8TJEUK
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0
    ports:
      - '8080:8080'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: root
    volumes:
      - ./keycloak-realm-export.json:/opt/keycloak/data/import/realm-export.json
    command: start-dev --import-realm
  vault:
    container_name: vault
    image: hashicorp/vault:1.15
    depends_on:
      - keycloak
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
    ports:
      - '8200:8200'
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev -dev-listen-address="0.0.0.0:8200" -dev-root-token-id="root"
  vault-init:
    container_name: vault-init
    image: ubuntu:24.04
    depends_on:
      - vault
    volumes:
      - ./vault-init.sh:/vault-init.sh
    entrypoint: /bin/bash -c ./vault-init.sh
